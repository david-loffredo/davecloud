---
# Things that are common across all administered machines.  With a
# single web and mail machine for a variety of domains, all values can
# stay here, but if some domains are on separate machines, break those
# settings into separate files.
# 
# Sensitive values with the "vault_" prefix are in the encrypted
# vault.yml file. Use "ansible-vault edit vault.yml" to look at it.

# An hour is good enough for packages where we want the latest 
pkg_cache_life: 3600

domain: example.com
    
#========================================
# Common credentials for root and deploy accounts.
#
# Account used to create the deploy account and lock down ssh. Usually
# root, but may be the 'pi' account on a raspberry pi
first_acct: root 

# Deploy account is the only login 
deploy_acct: deploy
deploy_acct_group: users
deploy_acct_sshpub: "{{ vault_deploy_sshpub }}"
deploy_acct_sshkey: "{{ vault_deploy_sshkey }}"
deploy_acct_pwhash: "{{ vault_deploy_pwhash }}"

# admin email - reports will be sent to this address
admin_email: "admin@{{ domain }}"


# UTC is default, see paths under /usr/share/zoneinfo
# https://en.wikipedia.org/wiki/List_of_tz_database_time_zones
#timezone: 'Etc/UTC' 
#timezone: 'US/Eastern'


# Can set LANG and LANGUAGE separately, hack common/tasks/locale.yml
# if you want something finer grained.
#host_locale:    en_US.UTF-8
#host_language:  en_US.UTF-8

#========================================
# Network and Firewall settings
#
# Appropriate ports will be opened for named services (mail=submission
# and imaps, apache=http/https, etc).  SSH is always open.  Any extra
# ports go in the lists below.  Fail2ban also checks the services list
# to see what jails to use.
#
firewall_services: [ 'mail', 'web' ]
#firewall_opentcp: [any extra ports]
#firewall_openudp: [any extra ports]

#firewall_opentcp: [9101, 9102, 9103]

# fail2ban will ignore these networks
# firewall_friendly_networks:


#========================================
# Webserver Settings
#
# Values to populate the Apache host configuration files.  Dictionary
# contains name (ServerName required), aliases (list of ServerAlias
# values), admin (ServerAdmin, defaults to webmaster@{{main.name}})
# and root (DocumentRoot, defaults to /var/www/{{host}})
web_vhosts:
  - name: "{{ domain }}"
    aliases:
      - www.{{ domain }}
      - mail.{{ domain }}
  - name: second-domain.example
    aliases:
      - www.second-domain.example


#========================================
# Mail Server Settings
#

# Encrypt data at rest for the mail spool 
cryptdir_pw: "{{vault_cryptdir_pw}}"

# Default is EncFS, use LUKS if we have a separate partition
#cryptdir_type: luks
#cryptdir_luks_dev: "/dev/replace-with-real-device"


mail_server_hostname: "mail.{{ domain }}"
mail_autoconfig_hostname: "autoconfig.{{ domain }}"

mail_domains:
  - "{{ domain }}"
  - second-domain.example

mail_users:
  - email: "{{ admin_email }}"
    pw: "{{vault_mbox_admin_pw}}"
  - email: "relay@{{ domain }}"
    pw: "{{vault_relay_pw}}"
  - email: "user1@{{ domain }}"
    pw: "{{vault_mbox_user1_pw}}"
  - email: "user2@second-domain.example"
    pw: "{{vault_mbox_user2_pw}}"


# mail_aliases is a list of hashes with src/dst pairs for aliases in
# the virtual users table.  We automatically alias the admin_email to
# a list of system addresses (given by mail_local_admin_aliases) for
# each domain.  This includes 'root', 'abuse', 'postmaster', etc.
#    
#mail_aliases: 
#   - { src: "source@domain",         dst: "dest@domain" }

# Will do DKIM signing if the selector is set.  Usually follow a year
# month pattern (202001) so that we have a predictable pattern when we
# rotate them.  When near rotation time, we can set the selector_next
# var to pre-generate the keys, but do not use them.  This gives us a
# chance to get the public keys into DNS and let them propogate.
#
#dkim_selector:
#dkim_selector_next:


#========================================
# Bacula Client and Server Settings
#
bacula_db: sqlite3
#bacula_db_pw:           "{{ vault_bacula_db_pw }}"

bacula_client_pw:       "{{ vault_bacula_client_pw }}"
bacula_storage_pw:      "{{ vault_bacula_storage_pw }}"
bacula_console_pw:      "{{ vault_bacula_console_pw }}"
bacula_tunnel_sshpub:   "{{ vault_bacula_tunnel_sshpub }}"
bacula_tunnel_sshkey:   "{{ vault_bacula_tunnel_sshkey }}"
# bacula_clients defaults to cloud group, set if extra machines

#bacula_client_tunnel: no
