---
# Things that are common across all administered machines.  With a
# single web and mail machine for a variety of domains, all values can
# stay here, but if some domains are on separate machines, break those
# settings into separate files.
# 
# Sensitive values with the "vault_" prefix are in the encrypted
# vault.yml file. Use "ansible-vault edit vault.yml" to look at it.

# An hour is good enough for packages where we want the latest 
pkg_cache_life: 3600

domain: example.com
    
#========================================
# Common credentials for root and deploy accounts.
#
# Account used to create the deploy account and lock down ssh. Usually
# root, but may be the 'pi' account on a raspberry pi
first_acct: root 

# Deploy account is the only login 
deploy_acct: deploy
deploy_acct_group: users
deploy_acct_sshpub: "{{ vault_deploy_sshpub }}"
deploy_acct_sshkey: "{{ vault_deploy_sshkey }}"
deploy_acct_pwhash: "{{ vault_deploy_pwhash }}"

# admin email - reports will be sent to this address
admin_email: "admin@{{ domain }}"


# UTC is default, see paths under /usr/share/zoneinfo
# https://en.wikipedia.org/wiki/List_of_tz_database_time_zones
#timezone: 'Etc/UTC' 
#timezone: 'US/Eastern'


# Can set LANG and LANGUAGE separately, hack common/tasks/locale.yml
# if you want something finer grained.
#host_locale:    en_US.UTF-8
#host_language:  en_US.UTF-8

#========================================
# Network and Firewall settings
#
# Appropriate ports will be opened for named services (mail=submission
# and imaps, apache=http/https, etc).  SSH is always open.  Any extra
# ports go in the lists below.  Fail2ban also checks the services list
# to see what jails to use.
#
firewall_services: [ 'mail', 'web' ]
#firewall_opentcp: [any extra ports]
#firewall_openudp: [any extra ports]

#firewall_opentcp: [9101, 9102, 9103]

# fail2ban will ignore these networks
# firewall_friendly_networks:


#========================================
# Webserver Settings
#
# Values to populate the Apache host configuration files.  Dictionary
# contains name (ServerName required), aliases (list of ServerAlias
# values), admin (ServerAdmin, defaults to webmaster@{{main.name}})
# and root (DocumentRoot, defaults to /var/www/{{host}})
web_vhosts:
  - name: "{{ domain }}"
    aliases:
      - www.{{ domain }}
      - mail.{{ domain }}
  - name: second-domain.example
    aliases:
      - www.second-domain.example


# Mail domains and users.  Set into the virtual.sqlite database for
# use with postfix, dovecot, and roundcube.

# On Debian, smtpd normally runs chrooted to /var/spool/postfix, so we
# need to put the database under there or else it will not be able to
# authenticate.  For security at rest, we encrypt the directory where
# the user database is located as well as the mail spool.
# 
# The mail scripts for config and boot are just under /etc/postfix for
# simplicity.
#
mail_server_hostname: "mail.{{ domain }}"
mail_autoconfig_hostname: "autoconfig.{{ domain }}"

mail_cfg_dir: /etc/postfix
mail_db_crypt:  /var/spool/postfix/etc/maildb_crypt
mail_db_clear:  /var/spool/postfix/etc/maildb
mail_db_util: "{{ mail_cfg_dir }}/mailcfg"
mail_db_name: maildb.sqlite3
mail_db: "{{ mail_db_clear }}/{{ mail_db_name }}"

# Encrypt mail data at rest with EncFS, and cleartext mountpoint
mail_spool_crypt: "/var/vmail_crypt"
mail_spool_clear: "/var/vmail"
mail_spool_pw:    "{{vault_crypt_pw}}"

mail_domains:
  - "{{ domain }}"
  - machineplan.com

mail_users:
  - email: "{{ admin_email }}"
    pw: "{{vault_mbox_admin_pw}}"
  - email: "relay@{{ domain }}"
    pw: "{{vault_relay_pw}}"
  - email: "user1@{{ domain }}"
    pw: "{{vault_mbox_user1_pw}}"
  - email: "user2@second-domain.example"
    pw: "{{vault_mbox_user2_pw}}"

mail_aliases:
  - { src: "root@{{ domain }}",         dst: "{{ admin_email }}" }
  - { src: "postmaster@{{ domain }}",   dst: "{{ admin_email }}" }
  - { src: "webmaster@{{ domain }}",    dst: "{{ admin_email }}" }
  - { src: "security@{{ domain }}",     dst: "{{ admin_email }}" }
  - { src: "abuse@{{ domain }}",        dst: "{{ admin_email }}" }
  - { src: "root@second-domain.example",        dst: "{{ admin_email }}" }
  - { src: "postmaster@second-domain.example",  dst: "{{ admin_email }}" }
  - { src: "webmaster@second-domain.example",   dst: "{{ admin_email }}" }
  - { src: "security@second-domain.example",    dst: "{{ admin_email }}" }
  - { src: "abuse@second-domain.example",       dst: "{{ admin_email }}" }


# Will do DKIM signing if the selector is set.  Usually follow a year
# month pattern (202001) so that we have a predictable pattern when we
# rotate them.  When near rotation time, we can set the selector_next
# var to pre-generate the keys, but do not use them.  This gives us a
# chance to get the public keys into DNS and let them propogate.
#
#dkim_selector:
#dkim_selector_next:



# Encrypt private data at rest with EncFS, and cleartext mountpoint
private_dir_crypt:  /var/private_crypt
private_dir_clear:  /var/private
private_dir_pw:    "{{vault_crypt_pw}}"


# Bacula
bacula_db: sqlite3
#bacula_db_pw:           "{{ vault_bacula_db_pw }}"

bacula_client_pw:       "{{ vault_bacula_client_pw }}"
bacula_storage_pw:      "{{ vault_bacula_storage_pw }}"
bacula_console_pw:      "{{ vault_bacula_console_pw }}"
bacula_tunnel_sshpub:   "{{ vault_bacula_tunnel_sshpub }}"
bacula_tunnel_sshkey:   "{{ vault_bacula_tunnel_sshkey }}"
# bacula_clients defaults to cloud group, set if extra machines

#bacula_client_tunnel: no
