---
# Bacula director config
- name: bacula storage password has real value
  fail: msg="Set bacula_storage_pw to a real value"
  when: bacula_storage_pw == "changeme"

- name: bacula console password has real value
  fail: msg="Set bacula_console_pw to a real value"
  when: bacula_console_pw == "changeme"

# Install the database back end that we will use with bacula.  There
# are three options: postgres, mysql, and sqlite, although sqlite has
# been deprecated.   We do this before we install the director.
#
# If we just install the db package blind, debconf and dbconfig-common
# will generate a random DB password.  I don't know how to grep around
# and get that back to populate the Catalog{} entry. so set an
# explicit password.
#
# Unlike other debconf prompts, you cannot pre-seed responses for
# dbconfig-common prompts using debconf-set-selections or the ansible
# debconf module. Instead, you must create a configuration file in
# /etc/dbconfig-common.

# The bacula-server package brings in bacula-director, bacula-sd, and
# bacula-bscan
- name: bacula database config directory present
  file: state=directory path="{{ item }}"
    owner=root group=root mode=0755
  with_items:
    - /etc/dbconfig-common

# changing this after the fact might require dpkg-reconfigure 
- name: bacula database config installed
  template: src={{item}}.conf.j2
    dest=/etc/dbconfig-common/{{item}}.conf
    owner=root group=root mode=0600
  with_items:
    - "{{bacula_db_pkg[bacula_db]}}"

- name: bacula director packages installed
  package:
    state: present
    name:
      - "{{bacula_db_pkg[bacula_db]}}"
      - bacula-server
      - bacula-console      

- name: bacula server working directories present
  file: state=directory path="{{ item }}"
    owner=root group=bacula mode=0770
  with_items:
    - "{{ bacula_director_workdir }}"
    - "{{ bacula_storage_workdir }}"
    - "{{ bacula_storage_datadir }}"
    - /etc/bacula/tunnel

    
# Configs for director, storage daemon, and console
- name: bacula config files present
  template: src={{item}}.j2
    dest=/etc/bacula/{{item}}
    owner=root group=bacula mode=0640
  with_items:
    - bacula-dir.conf
    - bacula-sd.conf
    - bconsole.conf
  notify:
    - restart bacula director
    - restart bacula storage daemon

- name: cloud client configurations present
  template:
    src: client.conf.j2
    dest: /etc/bacula/{{hostvars[item].inventory_hostname_short}}-job.conf
    owner: root
    group: bacula
    mode: 0640
  with_items: "{{ bacula_clients }}"
  notify:
    - restart bacula director

# SSH Tunnel Things ---------------------------------------
- name: bacula tunnel script present
  template: src={{item}} dest=/etc/bacula/{{item}}
    owner=root group=bacula mode=0750
  with_items:
    - ssh-tunnel.sh

- name: bacula tunnel keys for all clients
  copy: src={{item.src}}
    dest=/etc/bacula/tunnel/{{item.dst}}
    owner=root group=bacula mode=0640
  with_items: >-
    {%- set ns = namespace(keys=[]) -%}
    {%- for i in bacula_clients -%}
    {{- ns.keys.append( {
      "src": hostvars[i].bacula_tunnel_sshkeypath |
      default(bacula_default_tunnel_sshkeypath),
      "dst": hostvars[i].bacula_tunnel_sshkeyname |
      default(bacula_default_tunnel_sshkeyname) } ) -}}
    {%- endfor -%}
    {{- ns.keys | unique -}}

# Storage director is on the same machine, but we want to give it a
# distinct name for use when tunneling.
- name: local storage director resolves to loopback
  lineinfile:
    dest: /etc/hosts
    regexp: '.*{{ item }}$'
    line: "127.0.0.1 {{ item }}"
    state: present
  with_items: 
    - "{{ bacula_storage_host }}"

# RedHat and Suse would also need stuff in sysconfig

- name: bacula services enabled and running
  service: name={{item}} enabled=yes state=started
  with_items:
    - bacula-dir
    - bacula-sd


  
