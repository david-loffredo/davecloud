---
# The virtual user database holds account details.  We use SQLite
# because this small, simple, and relatively static, but you can use
# MySQL, Maria, or Postgres if you prefer.  I've written the mailcfg
# perl utility to manage the database.  It uses DBI and might just
# need minor changes to the connect statement and SQL for use with
# other RDBs.

# Do not start postfix at boot, Wait until the encrypted spool is
# mounted.  Our "mailboot" script mounts and starts.  The "restart
# postfix" action in handlers/main.yml should disable boot start.
#
- name: Postfix and related packages present
  apt:
    name:
      - postfix
      - postfix-sqlite
      - libdbi-perl
      - libdbd-sqlite3-perl
    state: present


# Simple Authentication Security Layer (SASL)
#      - libsasl2-modules
#      - sasl2-bin
#      - postfix-pcre
#      - postgrey
#      - python-psycopg2
    
- name: Mail account utilities present
  template: src={{ item }}.j2 dest={{ mail_cfg_dir }}/{{ item }}
    owner=root group=root mode=0755
  with_items:
    - mailboot
    - mailcfg

# The database directory should have been created and encrypted by the
# encfs.yml playbook.
- name: Mail account database present
  command: "{{ mail_db_util }} adddom {{ item }}"
  register: result
  changed_when: result.stdout != ""  
  with_items: "{{ mail_domains }}"

- name: Mail users present
  command: "{{ mail_db_util }} adduser {{ item.email }} {{ item.pw }}"
  register: result
  changed_when: result.stdout != ""  
  with_items: "{{ mail_users }}"
  
- name: Mail aliases present
  command: "{{ mail_db_util }} addalias {{ item.src }} {{ item.dst }}"
  register: result
  changed_when: result.stdout != ""  
  with_items: "{{ mail_aliases }}"
  
- name: Mail config templates present
  template: src="postfix/{{item}}" dest="{{mail_cfg_dir}}/{{item}}"
    owner=root group=root mode=0644
  with_items:
    - main.cf
    - master.cf
    - sqlite-virtual-alias-maps.cf
    - sqlite-virtual-mailbox-domains.cf
    - sqlite-virtual-mailbox-maps.cf
  notify: restart postfix


# This strips outgoing mail headers
#      - postfix-pcre

# - name: Create postfix maps directory
#   file: path=/etc/postfix/maps state=directory owner=root group=root

# - name: Copy smtp_header_checks.pcre
#   copy: src=etc_postfix_maps_smtp_header_checks.pcre dest=/etc/postfix/maps/smtp_header_checks.pcre owner=root group=root
  

- name: certbot post-renew hook to reload postfix
  copy:
    content: "#!/bin/bash\n\nservice postfix reload\n"
    dest: /etc/letsencrypt/renewal-hooks/post/postfix
    owner: root
    group: root
    mode: 0755
