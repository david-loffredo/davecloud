---
# Debian 10 versions
# postfix       3.4.7

##
## VMAIL user/group and permissions
##
- name: group vmail present
  group: name=vmail state=present gid=5000

- name: user vmail present
  user: name=vmail group=vmail state=present uid=5000
    home={{mail_spool_dir}} shell=/usr/sbin/nologin

# use mode=02775 to setgid
- name: mail spool directory and permissions 
  file: state=directory path={{mail_spool_dir}} group=vmail mode=0775

# The queue directory must be present or else the chroot will not be
# populated.

# Seeing issue in log, has to do with socket think we were not
# seeing it because original chroot had something we do not.
# root@davecloud:/vault# grep "systemd listens" /var/log/mail.log 
# Jan 23 22:55:52 davecloud dovecot: master: Error: systemd listens on port 143, but it's not configured in Dovecot. Closing.
# Jan 23 22:55:52 davecloud dovecot: master: Error: systemd listens on port 143, but it's not configured in Dovecot. Closing.

- name: other mail directories and permissions
  file: state=directory path={{item}} mode=0755
  with_items:
    - "{{mail_queue_dir}}"
    - "{{mail_db_dir}}"
    

# The virtual user database holds account details.  We use SQLite
# because this small, simple, and relatively static, but you can use
# MySQL, Maria, or Postgres if you prefer.  I've written the mailcfg
# perl utility to manage the database.  It uses DBI and might just
# need minor changes to the connect statement and SQL for use with
# other RDBs.
- name: postfix and related packages present
  package:
    state: present
    name:
      - postfix
      - postfix-sqlite
      - libdbi-perl
      - libdbd-sqlite3-perl

# Do not start postfix at boot, Wait until the encrypted spool is
# mounted.  Our "mailboot" script mounts and starts.  This should run
# "sudo update-rc.d postfix disable" and change the postfix links from
# rc3.d/ and rc5.d/S01postfix to the equivalent K links.
#
- name: postfix not started at boot
  service: name=postfix enabled=no

- name: postfix configuration present
  template: src="postfix/{{item}}" dest="{{mail_cfg_dir}}/{{item}}"
    owner=root group=root mode=0644
  with_items:
    - main.cf
    - master.cf
    - sqlite-virtual-alias-maps.cf
    - sqlite-virtual-mailbox-domains.cf
    - sqlite-virtual-mailbox-maps.cf
    - denied_recipients
  notify:
    - postmap files
    - restart postfix
  tags: dkim    # main.cf can change with dkim signing
  
- name: custom postfix queue and default needs cleanup
  stat: path={{mail_queue_default_dir}}
  register: test_dflt_queue
  when: mail_queue_dir != mail_queue_default_dir
  changed_when: test_dflt_queue.stat.exists and
        test_dflt_queue.stat.isdir
  notify:
    - restart postfix
    - restart dovecot
    - remove default postfix queue


- name: certbot post-renew hook to reload postfix
  copy:
    content: "#!/bin/bash\n\nservice postfix reload\n"
    dest: /etc/letsencrypt/renewal-hooks/post/postfix
    owner: root
    group: root
    mode: 0755


#------------------------------
# Mail user database    
- name: mail account utilities present
  template: src=mailcfg.j2 dest={{mail_db_util}}
    owner=root group=root mode=0755

# Restore snapshot from existing machine if needed
- name: check for mail database backup
  become: False
  local_action:
    stat path="{{snapshot_dir}}/{{ mail_db_name }}"
  register: mail_db_backup

- name: restore mail database backup
  copy:
    src: "{{snapshot_dir}}/{{ mail_db_name }}"
    dest: "{{ mail_db }}"
    owner: root
    group: root
    mode: 0644
  when: mail_db_backup.stat.exists == true

    
# The database directory should have been created and encrypted by the
# encfs.yml playbook.
- name: mail account database present
  command: "{{ mail_db_util }} adddom {{ item }}"
  register: result
  changed_when: result.stdout != ""  
  with_items: "{{ mail_domains }}"

- name: mail users present
  command: "{{ mail_db_util }} adduser {{ item.email }} {{ item.pw }}"
  register: result
  changed_when: result.stdout != ""  
  with_items: "{{ mail_users }}"
  
- name: mail aliases present
  command: "{{ mail_db_util }} addalias {{ item.src }} {{ item.dst }}"
  register: result
  changed_when: result.stdout != ""  
  with_items: "{{ mail_admin_aliases + mail_aliases|default([]) }}"

# Use vmail group so that dovecot can also see it.
- name: mail database permissions set
  file: path={{mail_db}} owner=root group=vmail mode=0640

