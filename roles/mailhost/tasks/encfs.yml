---    
# Debian 10 versions
# encfs         1.9.5-1+b1

## ENCFS is deprecated so consider switching to per directory ext4
## encryption with fscrypt.  Need to investigate how to best do this
## though.  https://tlbdk.github.io/ubuntu/2018/10/22/fscrypt.html

- name: EncFS present
  package: name=encfs state=present

- name: encrypted and cleartext directories present
  file: state=directory path={{item}}
  with_items:
    - "{{mail_spool_crypt}}"
    - "{{mail_spool_clear}}"
    - "{{mail_db_crypt}}"
    - "{{mail_db_clear}}"
    - "{{private_dir_crypt}}"
    - "{{private_dir_clear}}"

##
## Mail Spool Directory
##
- name: encrypted mail spool contents check
  shell: ls {{mail_spool_crypt}}/*
  ignore_errors: True
  changed_when: False  # never report as "changed"
  register: encfs_spool_check

# Check for the presence of a flag file to see if the filesystem has
# been initialized yet.  On first call, EncFS gathers info and inits
# the filesystem.  The "p" is for paranoia mode.
#
- name: encrypted mail spool empty, creating new
  shell: printf "p\n{{ mail_spool_pw }}" | encfs {{mail_spool_crypt}} {{mail_spool_clear}} --public --stdinpass && touch {{mail_spool_clear}}/mounted.txt
  when: encfs_spool_check.rc > 0

- name: encrypted mail spool present, mounted if needed
  shell: command="printf '{{ mail_spool_pw }}' | encfs {{mail_spool_crypt}} {{mail_spool_clear}} --public --stdinpass" creates="{{mail_spool_clear}}/mounted.txt"
  when: encfs_spool_check.rc == 0

##
## Mail User Database Directory
##
- name: encrypted mail database contents check
  shell: ls {{mail_db_crypt}}/*
  ignore_errors: True
  changed_when: False  # never report as "changed"
  register: encfs_db_check

# Check for the presence of a flag file to see if the filesystem has
# been initialized yet.  On first call, EncFS gathers info and inits
# the filesystem.  The "p" is for paranoia mode.
#
- name: encrypted mail database empty, creating new
  shell: printf "p\n{{ mail_spool_pw }}" | encfs {{mail_db_crypt}} {{mail_db_clear}} --public --stdinpass && touch {{mail_db_clear}}/mounted.txt
  when: encfs_db_check.rc > 0

- name: encrypted mail database present, mounted if needed
  shell: command="printf '{{ mail_spool_pw }}' | encfs {{mail_db_crypt}} {{mail_db_clear}} --public --stdinpass" creates="{{mail_db_clear}}/mounted.txt"
  when: encfs_db_check.rc == 0

- name: cleartext mail database directory permissions
  file: state=directory path={{mail_db_clear}} mode=0755


##
## Private Configuration Directory
##
- name: encrypted private dir contents check
  shell: ls {{private_dir_crypt}}/*
  ignore_errors: True
  changed_when: False  # never report as "changed"
  register: encfs_private_check

# Check for the presence of a flag file to see if the filesystem has
# been initialized yet.  On first call, EncFS gathers info and inits
# the filesystem.  The "p" is for paranoia mode.
#
- name: encrypted private dir empty, creating new
  shell: printf "p\n{{ private_dir_pw }}" | encfs {{private_dir_crypt}} {{private_dir_clear}} --public --stdinpass && touch {{private_dir_clear}}/mounted.txt
  when: encfs_private_check.rc > 0

- name: encrypted private dir present, mounted if needed
  shell: command="printf '{{ private_dir_pw }}' | encfs {{private_dir_crypt}} {{private_dir_clear}} --public --stdinpass" creates="{{private_dir_clear}}/mounted.txt"
  when: encfs_private_check.rc == 0

- name: cleartext private dir directory permissions
  file: state=directory path={{private_dir_clear}} mode=0700



  
##
## VMAIL user/group and permissions
##
- name: group vmail present
  group: name=vmail state=present gid=5000

- name: user vmail present
  user: name=vmail group=vmail state=present uid=5000
    home={{mail_spool_clear}} shell=/usr/sbin/nologin

# use mode=02775 to setgid
- name: cleartext mail spool directory permissions 
  file: state=directory path={{mail_spool_clear}} group=vmail mode=0775

