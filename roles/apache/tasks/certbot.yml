---
# Letsencrypt package was renamed to CERTBOT
# https://certbot.eff.org/
#
# The certbot package installs a cron.d script that calls renew every
# twelve hours.  This only updates the cert if it is near expiration
# so it can be called frequently.
#

- name: certbot packages are installed
  apt:
    name:
      - certbot
      - python-certbot-apache
    state: present


# Restore snapshot from existing machine if needed
- name: Check for certbot local key backup
  become: False
  local_action:
    stat path="{{snapshot_dir}}/letsencrypt_backup.tgz"
  register: certbot_key_backup

- name: restore certbot local key backup
  unarchive:
    src: "{{snapshot_dir}}/letsencrypt_backup.tgz"
    dest: /etc/letsencrypt
    owner: root
    group: root
  when: certbot_key_backup.stat.exists == true


# configure new settings
- name: common ssl config present
  copy:
    src: options-ssl-apache.conf
    dest: /etc/letsencrypt/options-ssl-apache.conf
    owner: root
    group: root
    mode: 0644

- name: certificate testing script present
  copy:
    src: testcertnames
    dest: "{{certbot_test_util}}"
    owner: root
    group: root
    mode: 0755

- include_tasks: certbot_create.yml
  with_items: "{{ certbot_certs }}"
  loop_control:
    loop_var: cert_item

- name: apache ssl enabled
  apache2_module:
    state: present
    name: ssl

- name: certbot pre-renew hook to stop apache
  copy:
    content: "#!/bin/bash\n\nservice apache2 stop\n"
    dest: /etc/letsencrypt/renewal-hooks/pre/apache2
    owner: root
    group: root
    mode: 0755

- name: certbot post-renew hook to start apache
  copy:
    content: "#!/bin/bash\n\nservice apache2 start\n"
    dest: /etc/letsencrypt/renewal-hooks/post/apache2
    owner: root
    group: root
    mode: 0755

# - name: Add group name ssl-cert for SSL certificates
#   group: name=ssl-cert state=present

# - name: Modify permissions to allow ssl-cert group access
#   file: path=/etc/letsencrypt/archive owner=root group=ssl-cert mode=0750
#   when: ansible_ssh_user != "vagrant"
