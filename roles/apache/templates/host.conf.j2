{# move jinja computation to one place to make the body clearer -#}
{%- set host_logname = host.name | replace('.', '_') -%}
{%- set host_admin = host.admin | default(admin_email) -%}
{%- set host_root = host.root | default(apache_host_dflt_root) -%}
{%- set host_cert = host.cert | default(apache_host_dflt_cert) -%}
{%- set host_certkey = host.certkey | default(apache_host_dflt_certkey) -%}
<VirtualHost *:80>
    # The ServerName directive sets the request scheme, hostname and
    # port that the server uses to identify itself. This is used when
    # creating redirection URLs. In the context of virtual hosts, the
    # ServerName specifies what hostname must appear in the request's
    # Host: header to match this virtual host. 
    ServerName {{ host.name }}
{% for alias in host.aliases %}
    ServerAlias {{ alias }}
{% endfor %}

    ServerAdmin {{ host_admin }}
    DocumentRoot {{ host_root }}

    # Available loglevels: trace8, ..., trace1, debug, info, notice, warn,
    # error, crit, alert, emerg.
    # It is also possible to configure the loglevel for particular
    # modules, e.g.
    #LogLevel info ssl:warn

    ErrorLog ${APACHE_LOG_DIR}/{{ host_logname }}_error.log
    CustomLog ${APACHE_LOG_DIR}/{{ host_logname }}_access.log combined

    # For most configuration files from conf-available/, which are
    # enabled or disabled at a global level, it is possible to
    # include a line for only one particular virtual host. For example the
    # following line enables the CGI configuration for this host only
    # after it has been globally disabled with "a2disconf".
    #Include conf-available/serve-cgi-bin.conf

{% if apache_force_https %}
    # Force everything to HTTPS.  A redirect updates the client to the
    # new URL.
    Redirect permanent / https://{{ host.name }}/

    # Another way to get the same
    # RewriteEngine On
    # RewriteRule ^(.*)$ https://%{HTTP_HOST}$1 [R=301,L]    
{% endif %}
{{ host.conf_extra|default('') }}
{{ host.conf_extra_http|default('') }}
</VirtualHost>

{% if apache_use_https %}
<VirtualHost *:443>
    ServerName {{ host.name }}
{% for alias in host.aliases %}
    ServerAlias {{ alias }}
{% endfor %}

    ServerAdmin {{ host_admin }}
    DocumentRoot {{ host_root }}

    ErrorLog ${APACHE_LOG_DIR}/{{ host_logname }}_error.log
    CustomLog ${APACHE_LOG_DIR}/{{ host_logname }}_access.log combined

    # Recommended SSL intermediate configuration
    # See https://ssl-config.mozilla.org

    # enable HTTP/2, if available
    Protocols h2 http/1.1
    
    SSLEngine on

    # HTTP Strict Transport Security (need mod_headers, 2years in seconds)
    Header always set Strict-Transport-Security "max-age=63072000"

    # Content-Security-Policy
    SSLProtocol             all -SSLv3 -TLSv1 -TLSv1.1
    SSLCipherSuite          ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
    SSLHonorCipherOrder     off
    SSLSessionTickets       off

    SSLCertificateFile {{ host_cert }}
    SSLCertificateKeyFile {{ host_certkey }}

    # Older versions took SSLCertificateFile=cert.pem and 
    # SSLCertificateChainFile   chain.pem file for apache<2.4.8

{% if apache_staple_on %}
    # Stapling is usually done globally, in the mod/ssl.conf
    # APACHE_RUN_DIR is /var/run/apache2
    SSLUseStapling On
    SSLStaplingCache shmcb:${APACHE_RUN_DIR}/ssl_stapling({{apache_staple_sz}})
{% endif %}

    #   SSL Engine Options:
    #   o StdEnvVars:
    #	 Exports the standard SSL/TLS related `SSL_*' environment variables.
    #	 Per default this exportation is switched off for performance reasons,
    #	 because the extraction step is an expensive operation and is usually
    #	 useless for serving static content. So one usually enables the
    #	 exportation for CGI and SSI requests only.
    #   o OptRenegotiate:
    #	 This enables optimized SSL connection renegotiation handling when SSL
    #	 directives are used in per-directory context.
    #SSLOptions +FakeBasicAuth +ExportCertData +StrictRequire
    SSLOptions +StrictRequire
    <FilesMatch "\.(cgi|shtml|phtml|php)$">
	SSLOptions +StdEnvVars +StrictRequire
    </FilesMatch>
    <Directory /usr/lib/cgi-bin>
	SSLOptions +StdEnvVars +StrictRequire
    </Directory>

{{ host.conf_extra|default('') }}
{{ host.conf_extra_https|default('') }}
</VirtualHost>
{% endif %}
